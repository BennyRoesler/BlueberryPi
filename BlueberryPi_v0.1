#! /usr/bin/env python3
import socket
import argparse
import bluetooth
import scanBlueberry as scanB

from paramiko import SSHClient
from scp import SCPClient

import random
import os

#Verifies if input is a UUID of style 'XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX'
def isUUID(input):
    if input.count("-")!=4:
        return False
    if len(input) !=36:
        return False
    for section in input.split("-"):
        for char in section:
            if (char>"F" or (char<"A" and not char.isdigit())) or (char >= "a" and char <= "z"):
                return False
    return True

#Verifies if input is a MAC address of style 'XX:XX:XX:XX:XX:XX'
def isMACAddress(input):
    if input.count(":")!=5:
        return False
    for section in input.split(":"):
        for char in section:
            if char>"F" or (char<"A" and not char.isdigit()) or len(section)!=2:
                return False
    return True

#Parse arguments, verify valid format
def parseArgs():
    parser = argparse.ArgumentParser(description='Scan given MAC address for Bluetooth vulnerabilites, or scan for all bluetooth devices in range and in discovery mode.')
    parser.add_argument('MAC', nargs='?', help='MAC Address of Bluetooth device to scan for vulnerabilites')

    args = parser.parse_args();
    if args.MAC is not None:
        if isMACAddress(args.MAC):
            return args.MAC
        else:
            print("Usage: BlueberryPi_v0.1 [XX:XX:XX:XX:XX:XX]")
            exit(1)
    else:
        return None

# SCP a file to the CS department
def scp(csvlocation="/tmp/Blueberry-DiscoveredDevices.csv", host="bangkok.cs.colostate.edu", remotepath="/tmp"):
    ssh = SSHClient()
    ssh.load_system_host_keys()
    ssh.connect(host, username="roeslerb", key_filename="BlueberrySSH")
    scp = SCPClient(ssh.get_transport())
    scp.put(csvlocation, remote_path=remotepath)
    scp.close()

def ascii_art():
    dir = 'ascii_art'
    filename = random.choice(os.listdir(dir))
    path = os.path.join(dir, filename)

    art = open(path, "r")
    print(art.read())


#Main section
def main():
    #Print random ASCII art
    ascii_art()

    #Parse arguments
    input = parseArgs();

    #Stuff
    if(input is not None):
        scanB.scanMAC(input)
    else:
        scanB.scanAll()
        scanB.scanAllServices()

    scp()

if __name__ == '__main__':
    main()

    # from bluetooth.ble import DiscoveryService
    #
    # service = DiscoveryService()
    # devices = service.discover(2)
    #
    # for address, name in devices.items():
    #     print("Name: {}, address: {}".format(name, address))
